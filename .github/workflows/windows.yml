name: Windows

on:
  pull_request:
    types: [synchronize, opened]
  push:
    branches:
      - main

env:
  OPENCV_VERSION: 4.7.0
  OPENCV_CACHE_VERSION: beta-1
  
permissions:
  contents: read

jobs:
  build:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Cache OpenCV binaries
      id: cache_opencv
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/cpp/opencv/build_windows_x64
        key: opencv-${{ env.OPENCV_VERSION }}-rev${{ env.OPENCV_CACHE_VERSION }}
        
    - name: Build OpenCV
      if: steps.cache_opencv.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/cpp
      run: |
        . "./build_opencv_windows.ps1"
        BuildForWindows "x64"    

    - name: Build OpenCvSharpExtern
      working-directory: ${{github.workspace}}/cpp
      run: |
        cmake `
          -S . `
          -B build `
          -D OpenCV_DIR=opencv/build_windows_x64
        cmake --build build --config Release -- -maxcpucount 
    
    - name: Test OpenCvSharpExtern
      working-directory: ${{github.workspace}}/cpp/build
      run: ctest -C Release

    #- name: Restore NuGet packages
    #  working-directory: ${{env.GITHUB_WORKSPACE}}
    #  run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    #- name: Build
    #  working-directory: ${{env.GITHUB_WORKSPACE}}
    #  # Add additional options to the MSBuild command line here (like platform or verbosity level).
    #  # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
    #  run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
